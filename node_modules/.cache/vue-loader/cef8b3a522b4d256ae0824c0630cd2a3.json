{"remainingRequest":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\src\\components\\AdminAttendance.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\src\\components\\AdminAttendance.vue","mtime":1590992463766},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGFibGUudi10YWJsZSB7CiAgbWF4LXdpZHRoOiBub25lOwp9Cg=="},{"version":3,"sources":["AdminAttendance.vue"],"names":[],"mappingsrBA;AACA;AACA","file":"AdminAttendance.vue","sourceRoot":"src/components","sourcesContent":["<!-- <template>\n  <div>\n    <v-row dense style=\"margin: 10px 10px -10px 10px;\">\n      <v-col cols=\"12\" sm=\"12\" md=\"2\" al>\n        <div class=\"text-left\">\n          <v-toolbar-title>Scan People in</v-toolbar-title>\n        </div>\n      </v-col>\n      <v-col cols=\"2\" />\n      <v-col cols=\"12\" sm=\"12\" md=\"4\">\n        <v-text-field\n          outlined\n          dense\n          v-model=\"search\"\n          append-icon=\"mdi-magnify\"\n          :label=\"$t('dataTable.SEARCH')\"\n          id=\"search\"\n          single-line\n          hide-details\n          clearable\n          clear-icon=\"mdi-close\"\n        />\n      </v-col>\n      <v-col cols=\"12\" sm=\"12\" md=\"3\">\n        <v-combobox\n          outlined\n          dense\n          v-model=\"fieldsToSearch\"\n          :items=\"searchFields\"\n          label=\"Fields\"\n          multiple\n        />\n      </v-col>\n    </v-row>\n  </div>\n</template> -->\n<!-- When using v-tab-item's that contain required input fields you must use the eager prop in order to validate the required fields that are not yet visible. -->\n<template>\n  <div>\n    <v-tabs\n      v-model=\"tab\"\n      background-color=\"transparent\"\n      grow\n      v-on:change=\"tabHandler\"\n    >\n      <v-tab>\n        Scan\n      </v-tab>\n      <!-- <v-tab>\n        Scan Delete\n      </v-tab> -->\n      <v-tab>\n        View Attendees\n      </v-tab>\n      <v-tab>\n        Info\n      </v-tab>\n\n      <v-tab-item style=\"height: calc(100vh - 145px);\">\n        <h1>{{ sAdd }}</h1>\n        <ErrorMessage />\n        <SuccessMessage />\n      </v-tab-item>\n      <!-- <v-tab-item>\n        <h1>{{ sDel }}</h1>\n        <ErrorMessage />\n        <SuccessMessage />\n      </v-tab-item> -->\n      <v-tab-item>\n        <h1>View Attendees</h1>\n        <v-container>\n          <v-data-iterator\n            :items=\"attendees\"\n            :search=\"search\"\n            :sort-by=\"sortBy.toLowerCase()\"\n            :sort-desc=\"sortDesc\"\n          >\n            <template v-slot:header>\n              <v-row dense class=\"px-4 my-4\">\n                <v-col cols=\"6\" sm=\"6\" md=\"6\">\n                  <v-text-field\n                    v-model=\"search\"\n                    clearable\n                    flat\n                    solo-inverted\n                    hide-details\n                    prepend-inner-icon=\"search\"\n                    label=\"Search\"\n                    dense\n                  />\n                </v-col>\n                <v-col cols=\"6\" sm=\"6\" md=\"3\">\n                  <v-select\n                    v-model=\"sortBy\"\n                    flat\n                    solo-inverted\n                    hide-details\n                    :items=\"keys\"\n                    prepend-inner-icon=\"filter_list\"\n                    label=\"Sort by\"\n                    dense\n                  />\n                </v-col>\n                <v-col cols=\"6\" sm=\"6\" md=\"2\">\n                  <v-btn-toggle v-model=\"sortDesc\" mandatory>\n                    <v-btn large depressed :value=\"false\" class=\"dense-button\">\n                      <v-icon>mdi-arrow-up</v-icon>\n                    </v-btn>\n                    <v-btn large depressed :value=\"true\" class=\"dense-button\">\n                      <v-icon>mdi-arrow-down</v-icon>\n                    </v-btn>\n                  </v-btn-toggle>\n                </v-col>\n\n                <v-col cols=\"6\" sm=\"6\" md=\"1\">\n                  <v-btn large class=\"dense-button\" v-on:click=\"tabHandler(2)\">\n                    <v-icon dark>mdi-refresh</v-icon>\n                  </v-btn>\n                </v-col>\n              </v-row>\n            </template>\n            <template v-slot:default=\"props\">\n              <v-row no-gutters>\n                <v-col\n                  v-for=\"item in props.items\"\n                  :key=\"item._id\"\n                  cols=\"12\"\n                  sm=\"6\"\n                  md=\"4\"\n                >\n                  <v-card class=\"ma-4\" max-width=\"500\">\n                    <v-card-title>{{ item.name }}</v-card-title>\n                    <v-card-subtitle class=\"text-left\">{{\n                      `Username: ${item.username}`\n                    }}</v-card-subtitle>\n                    <!--\n                    <v-card-text class=\"card-info-item\">\n                      {{ item.schedule }}\n                    </v-card-text>\n                    <v-card-text class=\"card-info-item\">\n                      {{ item.location }}\n                    </v-card-text>\n                    <v-card-text class=\"card-info-item\">\n                      {{ item.info }}\n                    </v-card-text> -->\n                    <!-- <div class=\"card-spacer\" /> -->\n                    <v-card-actions>\n                      <v-btn\n                        color=\"red\"\n                        class=\"action-button\"\n                        text\n                        v-on:click=\"handleToggleButtons(item, false)\"\n                        >Absent</v-btn\n                      >\n                      <v-switch\n                        value\n                        :input-value=\"item.present\"\n                        v-on:click=\"handleToggle(item)\"\n                      ></v-switch>\n                      <v-btn\n                        color=\"green\"\n                        class=\"action-button\"\n                        text\n                        v-on:click=\"handleToggleButtons(item, true)\"\n                      >\n                        Present\n                      </v-btn>\n\n                      <v-spacer></v-spacer>\n                    </v-card-actions>\n                  </v-card>\n                </v-col>\n              </v-row>\n            </template>\n          </v-data-iterator>\n        </v-container>\n      </v-tab-item>\n      <v-tab-item style=\"height: calc(100vh - 145px);\">\n        <h1>Info</h1>\n        <h2>Event Name: {{ eventName }} Type: {{ eventType }}</h2>\n        <h3>Date Range: {{ eventRange }}</h3>\n\n        <v-row justify=\"center\">\n          <v-dialog v-model=\"dialogA\" width=\"100%\">\n            <template v-slot:activator=\"{ on }\">\n              <v-btn dark v-on=\"on\">{{ attendedNum }} Attended</v-btn>\n            </template>\n            <v-card>\n              <v-card-title>\n                <span class=\"headline\">Attended</span>\n              </v-card-title>\n              <v-card-text>\n                <v-data-iterator\n                  :items=\"attended\"\n                  :search=\"search\"\n                  :sort-by=\"sortBy.toLowerCase()\"\n                  :sort-desc=\"sortDesc\"\n                >\n                  <template v-slot:header>\n                    <v-row dense class=\"px-4 my-4\">\n                      <v-col cols=\"6\" sm=\"6\" md=\"6\">\n                        <v-text-field\n                          v-model=\"search\"\n                          clearable\n                          flat\n                          solo-inverted\n                          hide-details\n                          prepend-inner-icon=\"search\"\n                          label=\"Search\"\n                          dense\n                        />\n                      </v-col>\n                      <v-col cols=\"6\" sm=\"6\" md=\"3\">\n                        <v-select\n                          v-model=\"sortBy\"\n                          flat\n                          solo-inverted\n                          hide-details\n                          :items=\"keys\"\n                          prepend-inner-icon=\"filter_list\"\n                          label=\"Sort by\"\n                          dense\n                        />\n                      </v-col>\n                      <v-col cols=\"6\" sm=\"6\" md=\"2\">\n                        <v-btn-toggle v-model=\"sortDesc\" mandatory>\n                          <v-btn\n                            large\n                            depressed\n                            :value=\"false\"\n                            class=\"dense-button\"\n                          >\n                            <v-icon>mdi-arrow-up</v-icon>\n                          </v-btn>\n                          <v-btn\n                            large\n                            depressed\n                            :value=\"true\"\n                            class=\"dense-button\"\n                          >\n                            <v-icon>mdi-arrow-down</v-icon>\n                          </v-btn>\n                        </v-btn-toggle>\n                      </v-col>\n\n                      <v-col cols=\"6\" sm=\"6\" md=\"1\">\n                        <v-btn\n                          large\n                          class=\"dense-button\"\n                          v-on:click=\"tabHandler(2)\"\n                        >\n                          <v-icon dark>mdi-refresh</v-icon>\n                        </v-btn>\n                      </v-col>\n                    </v-row>\n                  </template>\n                  <template v-slot:default=\"props\">\n                    <v-row no-gutters>\n                      <v-col\n                        v-for=\"item in props.items\"\n                        :key=\"item._id\"\n                        cols=\"12\"\n                        sm=\"6\"\n                        md=\"4\"\n                      >\n                        <v-card class=\"ma-4\" max-width=\"500\">\n                          <v-card-title>{{ item.name }}</v-card-title>\n                          <v-card-subtitle class=\"text-left\">{{\n                            `Username: ${item.username}`\n                          }}</v-card-subtitle>\n                          <!--\n                                  <v-card-text class=\"card-info-item\">\n                                    {{ item.schedule }}\n                                  </v-card-text>\n                                  <v-card-text class=\"card-info-item\">\n                                    {{ item.location }}\n                                  </v-card-text>\n                                  <v-card-text class=\"card-info-item\">\n                                    {{ item.info }}\n                                  </v-card-text> -->\n                          <!-- <div class=\"card-spacer\" /> -->\n                          <v-card-actions>\n                            <v-btn\n                              color=\"red\"\n                              class=\"action-button\"\n                              text\n                              v-on:click=\"handleToggleButtons(item, false)\"\n                              >Absent</v-btn\n                            >\n                            <v-switch\n                              value\n                              :input-value=\"item.present\"\n                              v-on:click=\"handleToggle(item)\"\n                            ></v-switch>\n                            <v-btn\n                              color=\"green\"\n                              class=\"action-button\"\n                              text\n                              v-on:click=\"handleToggleButtons(item, true)\"\n                            >\n                              Present\n                            </v-btn>\n\n                            <v-spacer></v-spacer>\n                          </v-card-actions>\n                        </v-card>\n                      </v-col>\n                    </v-row>\n                  </template> </v-data-iterator\n              ></v-card-text>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"green darken-1\" text @click=\"dialogA = false\"\n                  >close</v-btn\n                >\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <v-btn dark disabled>and</v-btn>\n          <v-dialog v-model=\"dialogNa\" width=\"100%\">\n            <template v-slot:activator=\"{ on }\">\n              <v-btn dark v-on=\"on\">{{ notAttendedNum }} DIDN'T ATTEND</v-btn>\n            </template>\n            <v-card>\n              <v-card-title>\n                <span class=\"headline\">Didn't Attend</span>\n              </v-card-title>\n              <v-card-text>\n                <v-data-iterator\n                  :items=\"notAttended\"\n                  :search=\"search\"\n                  :sort-by=\"sortBy.toLowerCase()\"\n                  :sort-desc=\"sortDesc\"\n                >\n                  <template v-slot:header>\n                    <v-row dense class=\"px-4 my-4\">\n                      <v-col cols=\"6\" sm=\"6\" md=\"6\">\n                        <v-text-field\n                          v-model=\"search\"\n                          clearable\n                          flat\n                          solo-inverted\n                          hide-details\n                          prepend-inner-icon=\"search\"\n                          label=\"Search\"\n                          dense\n                        />\n                      </v-col>\n                      <v-col cols=\"6\" sm=\"6\" md=\"3\">\n                        <v-select\n                          v-model=\"sortBy\"\n                          flat\n                          solo-inverted\n                          hide-details\n                          :items=\"keys\"\n                          prepend-inner-icon=\"filter_list\"\n                          label=\"Sort by\"\n                          dense\n                        />\n                      </v-col>\n                      <v-col cols=\"6\" sm=\"6\" md=\"2\">\n                        <v-btn-toggle v-model=\"sortDesc\" mandatory>\n                          <v-btn\n                            large\n                            depressed\n                            :value=\"false\"\n                            class=\"dense-button\"\n                          >\n                            <v-icon>mdi-arrow-up</v-icon>\n                          </v-btn>\n                          <v-btn\n                            large\n                            depressed\n                            :value=\"true\"\n                            class=\"dense-button\"\n                          >\n                            <v-icon>mdi-arrow-down</v-icon>\n                          </v-btn>\n                        </v-btn-toggle>\n                      </v-col>\n\n                      <v-col cols=\"6\" sm=\"6\" md=\"1\">\n                        <v-btn\n                          large\n                          class=\"dense-button\"\n                          v-on:click=\"tabHandler(2)\"\n                        >\n                          <v-icon dark>mdi-refresh</v-icon>\n                        </v-btn>\n                      </v-col>\n                    </v-row>\n                  </template>\n                  <template v-slot:default=\"props\">\n                    <v-row no-gutters>\n                      <v-col\n                        v-for=\"item in props.items\"\n                        :key=\"item._id\"\n                        cols=\"12\"\n                        sm=\"6\"\n                        md=\"4\"\n                      >\n                        <v-card class=\"ma-4\" max-width=\"500\">\n                          <v-card-title>{{ item.name }}</v-card-title>\n                          <v-card-subtitle class=\"text-left\">{{\n                            `Username: ${item.username}`\n                          }}</v-card-subtitle>\n                          <!--\n                                  <v-card-text class=\"card-info-item\">\n                                    {{ item.schedule }}\n                                  </v-card-text>\n                                  <v-card-text class=\"card-info-item\">\n                                    {{ item.location }}\n                                  </v-card-text>\n                                  <v-card-text class=\"card-info-item\">\n                                    {{ item.info }}\n                                  </v-card-text> -->\n                          <!-- <div class=\"card-spacer\" /> -->\n                          <v-card-actions>\n                            <v-btn\n                              color=\"red\"\n                              class=\"action-button\"\n                              text\n                              v-on:click=\"handleToggleButtons(item, false)\"\n                              >Absent</v-btn\n                            >\n                            <v-switch\n                              value\n                              :input-value=\"item.present\"\n                              v-on:click=\"handleToggle(item)\"\n                            ></v-switch>\n                            <v-btn\n                              color=\"green\"\n                              class=\"action-button\"\n                              text\n                              v-on:click=\"handleToggleButtons(item, true)\"\n                            >\n                              Present\n                            </v-btn>\n\n                            <v-spacer></v-spacer>\n                          </v-card-actions>\n                        </v-card>\n                      </v-col>\n                    </v-row>\n                  </template> </v-data-iterator\n              ></v-card-text>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"green darken-1\" text @click=\"dialogNa = false\"\n                  >close</v-btn\n                >\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <v-btn dark disabled>out of</v-btn>\n          <v-btn dark @click.native=\"tab = 1\"\n            >{{ attendeeNum }} attendees</v-btn\n          >\n        </v-row>\n      </v-tab-item>\n    </v-tabs>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { getFormat } from '@/utils/utils.js'\nconst moment = require('moment')\n// title: this.$store.getters.appTitle,\nexport default {\n  metaInfo() {\n    return {\n      title: this.$route.params.id,\n      titleTemplate: `${this.$t('events.TITLE')} - %s`\n    }\n  },\n  data() {\n    return {\n      sAdd: 'No Card Swiped Yet.',\n      // sDel: 'No Card Swiped Yet.',\n      tab: 0,\n      buffer: [],\n      cardSwipeListener: undefined,\n      search: '',\n      sortBy: 'name',\n      keys: ['name', 'username', 'email'],\n      filter: {},\n      sortDesc: false,\n      eventName: 'eventName',\n      eventType: 'eventType',\n      eventRange: 'eventRange',\n      attendeeNum: 0,\n      attendedNum: 0,\n      notAttendedNum: 0,\n      dialogA: false,\n      dialogNa: false\n    }\n  },\n  created() {\n    document.addEventListener('keydown', this.registerKeyStrokes)\n  },\n  destroyed() {\n    document.removeEventListener('keydown', this.registerKeyStrokes)\n  },\n  computed: {\n    attendees() {\n      return this.$store.state.adminAttendance.totalAttendance\n    },\n    attended() {\n      return this.$store.state.adminAttendance.attendanceInfo.attended\n    },\n    notAttended() {\n      return this.$store.state.adminAttendance.attendanceInfo.notAttended\n    }\n  },\n  async mounted() {\n    await this.getAttendance({\n      _id: this.$route.params.id,\n      eventId: this.$route.params.id\n    })\n    await this.getAttendanceInfo({\n      _id: this.$route.params.id,\n      eventId: this.$route.params.id\n    })\n  },\n  watch: {},\n  methods: {\n    ...mapActions([\n      'addAttendance',\n      'delAttendance',\n      'getAttendance',\n      'getAttendanceInfo'\n    ]),\n    getFormat(date) {\n      window.__localeId__ = this.$store.getters.locale\n      return getFormat(date, 'iii, MMMM d yyyy, h:mm a')\n    },\n    /* eslint-disable */\n    registerKeyStrokes(event) {\n      {\n        // const charList = 'abcdefghijklmnopqrstuvwxyz0123456789';\n        const key = event.key.toLowerCase()\n\n        // // we are only interested in alphanumeric keys\n        // if (charList.indexOf(key) === -1) return;\n\n        this.buffer.push(key)\n        // console.log(buffer);\n        let minusIndex = -1\n        let periodIndex = -1\n        if (key === 'enter') {\n          for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] === '-') {\n              minusIndex = i\n            }\n            if (this.buffer[i] === '.') {\n              periodIndex = i\n            }\n          }\n          if (minusIndex === -1 && periodIndex === -1) {\n            this.buffer = []\n          } else {\n            let str = ''\n            for (let i = minusIndex; i < this.buffer.length - 1; i++) {\n              if (this.buffer[i] !== 'shift') {\n                str += this.buffer[i]\n              }\n            }\n            if (this.tab == 0) {\n              this.addAttendee(str, this.$route.params.id)\n            } //else if (this.tab == 1) {\n            //this.delAttendee(str, this.$route.params.id)\n            //}\n          }\n        }\n      }\n    },\n    async addAttendee(str, id) {\n      try {\n        // Creating payload\n        await this.addAttendance({\n          _id: id,\n          eventId: id,\n          card: str\n        })\n        this.sAdd = `User Swiped Name: ${this.$store.swipedUserData.data.name}`\n\n        // eslint-disable-next-line no-unused-vars\n      } catch (error) {\n        this.sAdd = 'Swipe Failed'\n        //  console.log((this.$store.state.error.errorMessage = 'SWIPE_FAILED'))\n        //  this.$store.state.error.errorMessage = 'SWIPE_FAILED'\n        // setTimeout(function () {\n        //   this.$store.state.error.showErrorMessage = false\n        // }, 2000)\n        return undefined\n      }\n    },\n    async delAttendee(str, id) {\n      try {\n        // Creating payload\n        await this.delAttendance({\n          _id: id,\n          eventId: id,\n          card: str\n        })\n        //this.sDel = `User Swiped Name: ${this.$store.swipedUserData.data.name}`\n        // eslint-disable-next-line no-unused-vars\n      } catch (error) {\n        //  this.sDel = 'Swipe Failed'\n        //  this.$store.state.error.errorMessage = 'SWIPE_FAILED'\n        // setTimeout(function () {\n        //   this.$store.state.error.showErrorMessage = false\n        // }, 2000)\n        return undefined\n      }\n    },\n    async handleToggle(user) {\n      console.log(user)\n      if (user.present == true) {\n        await this.delAttendance({\n          _id: this.$route.params.id,\n          eventId: this.$route.params.id,\n          username: user.username\n        })\n        user.present = false\n      } else {\n        await this.addAttendance({\n          _id: this.$route.params.id,\n          eventId: this.$route.params.id,\n          username: user.username\n        })\n        user.present = true\n      }\n    },\n    async handleToggleButtons(user, val) {\n      console.log(user)\n      if (!val) {\n        await this.delAttendance({\n          _id: this.$route.params.id,\n          eventId: this.$route.params.id,\n          username: user.username\n        })\n        user.present = false\n      } else {\n        await this.addAttendance({\n          _id: this.$route.params.id,\n          eventId: this.$route.params.id,\n          username: user.username\n        })\n        user.present = true\n      }\n    },\n    async tabHandler(value) {\n      if (value == '1') {\n        this.getAttendance({\n          _id: this.$route.params.id,\n          eventId: this.$route.params.id\n        })\n      }\n      if (value == '2') {\n        await this.getAttendanceInfo({\n          _id: this.$route.params.id,\n          eventId: this.$route.params.id\n        })\n        this.eventName = this.$store.state.adminAttendance.attendanceInfo.eventData.name\n        this.eventType = this.$store.state.adminAttendance.attendanceInfo.eventData.type\n        this.eventRange = `${moment(\n          this.$store.state.adminAttendance.attendanceInfo.eventData.start\n        ).format('MM/DD/YY h:mm a')} - ${moment(\n          this.$store.state.adminAttendance.attendanceInfo.eventData.end\n        ).format('MM/DD/YY h:mm a')}`\n        ;(this.attendeeNum = this.$store.state.adminAttendance.totalAttendance.length),\n          (this.attendedNum = this.$store.state.adminAttendance.attendanceInfo.attended.length)\n        this.notAttendedNum = this.$store.state.adminAttendance.attendanceInfo.notAttended.length\n      }\n    },\n    async handleInfo() {\n      await this.getAttendanceInfo({\n        _id: this.$route.params.id,\n        eventId: this.$route.params.id\n      })\n      this.eventName = this.$store.state.adminAttendance.attendanceInfo.eventData.name\n      this.eventType = this.$store.state.adminAttendance.attendanceInfo.eventData.type\n      this.eventRange =\n        moment(\n          this.$store.state.adminAttendance.attendanceInfo.eventData.start\n        ).format('MM/DD/YY h:mm a') +\n        ' - ' +\n        moment(\n          this.$store.state.adminAttendance.attendanceInfo.eventData.end\n        ).format('MM/DD/YY h:mm a')\n      this.attendeeNum = this.$store.state.adminAttendance.totalAttendance.length\n\n      this.attendedNum = this.$store.state.adminAttendance.attendanceInfo.attended.length\n      this.notAttendedNum = this.$store.state.adminAttendance.attendanceInfo.notAttended.length\n    }\n  }\n}\n</script>\n\n<style>\ntable.v-table {\n  max-width: none;\n}\n</style>\n"]}]}