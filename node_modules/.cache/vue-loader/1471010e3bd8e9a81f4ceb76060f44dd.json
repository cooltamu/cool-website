{"remainingRequest":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\src\\components\\AdminEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\src\\components\\AdminEvents.vue","mtime":1590288529805},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joneb\\Documents\\GitHub\\cool-website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}